apply plugin: 'com.android.application'
apply plugin: 'io.objectbox'

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        applicationId "com.otitan.xnbhq.activity"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.00"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters 'armeabi', "x86", 'armeabi-v7a'
        }

        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "贵阳林业-v${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
//        }
//    }

//    android.applicationVariants.all {
//        variant -> variant.outputs.each {
//            output -> output.outputFile = new File(output.outputFile.parent, "贵阳林业_" + defaultConfig.versionCode +  "_v" + defaultConfig.versionName +"_"+buildType.name+ ".apk");
//        }
//    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }


}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('com.squareup.retrofit2:converter-gson:2.1.0') {
        exclude group: 'com.google.code.gson'
    }
    implementation('com.squareup.retrofit2:converter-simplexml:2.1.0') {
        exclude module: 'stax-api'
        exclude module: 'stax'
        exclude module: 'xpp3'
    }
    //compile(name: 'testlibrary-debug', ext: 'aar')
    implementation project(':zhjc')
    implementation 'com.jakewharton:butterknife:8.4.0'
    implementation 'com.jakewharton:butterknife-compiler:8.4.0'
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'cn.yipianfengye.android:zxing-library:2.1'
    testImplementation 'junit:junit:4.12'
    /**PermissionsDispatcher*/
    implementation('com.github.hotchemi:permissionsdispatcher:2.4.0') {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:2.4.0"
    /*屏幕百分比*/
    implementation 'com.android.support:percent:26.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    /*侧滑*/
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'
    implementation project(':LibraryManager:baselibrary')
    implementation project(':LibraryManager:photopicker')
    implementation project(':LibraryManager:proj4android')
    implementation project(':LibraryManager:versionupdata')

    implementation "io.objectbox:objectbox-android:$objectboxVersion"
    annotationProcessor "io.objectbox:objectbox-processor:$objectboxVersion"

    implementation files('libs/LPAPI-2017-11-06-R.jar')
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}



